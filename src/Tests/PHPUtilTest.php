<?php
namespace Chatbox\Tests;

//date_default_timezone_set('UTC');
//
//require_once dirname(__FILE__) . '/../util.php';
//

use PHPUnit_Framework_TestCase;

class PHPUtilStab extends \Chatbox\PHPUtil{

    static public function parseEloquentConfig($dsn)
    {
        return parent::parseEloquentConfig($dsn); // TODO: Change the autogenerated stub
    }


}
/**
 * PHPUnit test case for the util.php library
 *
 * @since   1.0.000
 */
class PHPUtilTest extends PHPUnit_Framework_TestCase
{

    public function dsnProvider()
    {
        $provider = [];
        //基本形
        $provider[] = ["mysql://root:12345@localhost/hogehoge",[
            'driver'    => 'mysql',
            'host'      => 'localhost',
            'database'  => 'hogehoge',
            'username'  => 'root',
            'password'  => '12345',
            'charset'   => 'utf8',
            'collation' => 'utf8_unicode_ci',
            'prefix'    => '',
        ]];
        //パスワード無し
        $provider[] = ["postgres://root@127.0.0.1/hoge_piyo",[
            'driver'    => 'postgres',
            'host'      => '127.0.0.1',
            'database'  => 'hoge_piyo',
            'username'  => 'root',
            'password'  => '',
            'charset'   => 'utf8',
            'collation' => 'utf8_unicode_ci',
            'prefix'    => '',
        ]];
        //ユーザ、パス無し
        $provider[] = ["sqlite://localhost/hogehoge",[
            'driver'    => 'sqlite',
            'host'      => 'localhost',
            'database'  => 'hogehoge',
            'username'  => '',
            'password'  => '',
            'charset'   => 'utf8',
            'collation' => 'utf8_unicode_ci',
            'prefix'    => '',
        ]];
        //prefixなど
        $provider[] = ["mysql://root:12345@localhost/hogehoge?prefix=fuga",[
            'driver'    => 'mysql',
            'host'      => 'localhost',
            'database'  => 'hogehoge',
            'username'  => 'root',
            'password'  => '12345',
            'charset'   => 'utf8',
            'collation' => 'utf8_unicode_ci',
            'prefix'    => 'fuga',
        ]];
        return $provider;
    }

    /**
     * @dataProvider dsnProvider
     */
    public function test_eloquent_array_config($dsn,$expect)
	{

		$config = PHPUtilStab::parseEloquentConfig($dsn);
		$this->assertEquals( $config, $expect );
	}

}
